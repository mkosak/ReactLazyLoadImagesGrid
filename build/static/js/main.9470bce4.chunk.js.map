{"version":3,"sources":["reducers/index.js","Header/Header.js","PostCard/PostCard.js","App.js","index.js"],"names":["postsReducer","state","action","type","posts","concat","loading","Header","props","filterByTag","className","onClick","defaultProps","PostCard","url","name","height","owner","ownerImage","likes","comments","likesCssClass","classNames","style","src","alt","title","href","backgroundImage","width","viewBox","fillRule","xmlns","d","clipRule","ownerAvatar","mockImagesHeight","App","useReducer","postsData","postsDispatch","useEffect","Axios","get","then","response","data","catch","e","console","log","param","map","post","index","id","text","ownerName","randHeight","Math","floor","random","length","mockImageUrl","mockAvatarUrl","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9470bce4.chunk.js","sourcesContent":["export const postsReducer = (state, action) => {\n  switch (action.type) {\n    case 'COLLECTING_POSTS':\n      return { ...state, posts: state.posts.concat(action.posts) }\n    case 'GETTING_POSTS':\n      return { ...state, loading: action.loading }\n    default:\n      return state;\n  }\n};\n\nexport const pagesReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADVANCE_PAGE':\n      return { ...state, page: state.page + 1 }\n    default:\n      return state;\n  }\n};\n  ","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Header.scss';\n\nexport default function Header(props) {\n    const { filterByTag } = props;\n    return (\n        <header className=\"App__header\">\n            <h1>Candy cotton candy sesame snaps biscuit</h1>\n            <div className=\"message\">\n                Candy cotton candy sesame <button onClick={filterByTag('Design')} className=\"tag\">#Design</button> \n                <button onClick={filterByTag('HR')} className=\"tag\">#HR</button> biscuit dessert topping halvah \n                marshmallow gummies. Pie toffee dragée chocolate toffee biscuit. Icing chocolate cake ice cream \n                jelly beans chocolate cake soufflé candy.\n            </div>\n        </header>\n    );\n}\nHeader.propTypes = {filterByTag: PropTypes.string,};\nHeader.defaultProps = {filterByTag: '',};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './postCard.scss';\n\nexport default function PostCard(props) {\n    const {url, name, height, owner, ownerImage, likes, comments } = props;\n    const likesCssClass = classNames('post-card__social likes', {\n        'liked': likes > 0\n    });\n\n    return (\n        <div className={`post-card`}>\n            <figure className=\"post-card__body\" style={{ height }}>\n                {url && (\n                    <img\n                        className=\"post-card__img\"\n                        src={url}\n                        alt={owner}\n                    />\n                )}\n            </figure>\n            <div className=\"post-card__footer\">\n                <p className=\"post-card__name\" title={name}>{name}</p>\n                <div className=\"post-card__data\">                    \n                    <a href=\"someurl.com\" className=\"author\" title={owner}>\n                        <span className=\"avatar\" style={{ backgroundImage: `url(\"${ownerImage}\")` }}></span>\n                        {owner}\n                    </a>\n                    <a href=\"someurl.com\" className={likesCssClass}>\n                        <svg width=\"12\" height=\"10\" viewBox=\"0 0 12 10\" fillRule=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M9 0C7.927 0 6.67217 1.16493 6 1.91533C5.32783 1.16493 4.073 0 3 0C1.10067 0 0 1.41874 0 3.22441C0 6.22483 6 9.57667 6 9.57667C6 9.57667 12 6.22483 12 3.35183C12 1.54617 10.8993 0 9 0Z\" />\n                        </svg>\n                        {likes}\n                    </a>\n                    <a href=\"someurl.com\" className=\"post-card__social comments\">\n                        <svg width=\"11\" height=\"11\" viewBox=\"0 0 11 11\" fillRule=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path clipRule=\"evenodd\" d=\"M2 0C0.895431 0 0 0.89543 0 2V5.44095V6.70551V10.7962L2.89961 8.70551H8.95582C10.0604 8.70551 10.9558 7.81008 10.9558 6.70551V2C10.9558 0.895431 10.0604 0 8.95582 0H2Z\" />\n                        </svg>\n                        {comments}\n                    </a>\n                </div>                \n            </div>\n        </div>\n    );\n}\n\nPostCard.propTypes = { \n    url: PropTypes.string,\n    name: PropTypes.string,\n    height: PropTypes.number,\n    owner: PropTypes.string,\n    ownerAvatar: PropTypes.string,\n    likes: PropTypes.number,\n    comments: PropTypes.number,\n};\nPostCard.defaultProps = { \n    url: '', \n    name: '',\n    height: 0,\n    owner: '', \n    ownerAvatar: '',\n    likes: 0,\n    comments: 0,\n};\n","import React, { useReducer, useEffect } from 'react';\nimport Axios from 'axios';\n\nimport { postsReducer } from './reducers';\n\nimport Header from './Header/Header';\nimport PostCard from './PostCard/PostCard';\n\nimport './App.scss';\n\nconst apiMainUrl = 'https://5c07ecd0646dca0013f87e8b.mockapi.io/flow';\nconst apiAvaterUrl = 'https://avatars.abstractapi.com/v1?api_key=a265273c72a94acea28c942b20ae4458';\nconst mockImagesHeight = [271, 186, 192, 0]; // mock images heights where 0 will load no image\n\nexport default function App() {\n  const [postsData, postsDispatch] = useReducer(postsReducer, { posts: [], loading: true, });\n\n  const filterByTag = (param) => () => {\n    console.log('filter by', param);\n  };\n\n  // perform an API call\n  useEffect(() => {\n    postsDispatch({ type: 'GETTING_POSTS', loading: true });\n\n    Axios.get(`${apiMainUrl}`)    \n      .then(response => response.data)\n      .then(posts => {\n        postsDispatch({ type: 'COLLECTING_POSTS', posts });\n        postsDispatch({ type: 'GETTING_POSTS', loading: false });\n      })\n      .catch(e => {\n        // handle error\n        postsDispatch({ type: 'GETTING_POSTS', loading: false });\n        console.log(e);\n      })\n  }, [ postsDispatch ]);\n\n  return (\n    <section className=\"App\">\n      <main className=\"App__container\">\n        <Header filterByTag={filterByTag} />\n\n        <div className=\"posts\">\n          {postsData.posts.map((post, index) => {\n            const { id, text, ownerName, likes, comments } = post;\n\n            // mock images different heights\n            const randHeight = mockImagesHeight[Math.floor(Math.random() * mockImagesHeight.length)];\n            // mock the case with no image\n            const mockImageUrl = randHeight ? `https://picsum.photos/id/${id}/248/${randHeight}` : '';\n            // mock avatar\n            const mockAvatarUrl = `${apiAvaterUrl}&name=${ownerName}`;\n\n            return (\n              <PostCard \n                key={`${id}_${index}`} \n                url={mockImageUrl}\n                name={text}\n                owner={ownerName} \n                ownerImage={mockAvatarUrl}\n                height={randHeight} \n                likes={likes} \n                comments={comments} \n              />\n            )\n          })}\n        </div>\n\n        {postsData.loading && (\n          <div className=\"loading\">\n            <p>Loading...</p>\n          </div>\n        )}\n      </main>\n\n      <footer className=\"App__footer\"></footer>\n    </section>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}